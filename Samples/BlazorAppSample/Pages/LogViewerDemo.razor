@page "/logviewer"

<h1>Log Viewer!</h1>

<EditForm Model="configuration">
    <label>Timestamp</label><InputEnumSelect @bind-Value="configuration.TimestampFormat" />

    <label><InputCheckbox @bind-Value="configuration.ShowLineNumbers" /> Show line numbers</label>
</EditForm>

<LogViewer Entries="entries" TimestampDisplayFormat="configuration.TimestampFormat" ShowLineNumbers="configuration.ShowLineNumbers" LogHighlighters="highlighters" />

@code{
    ViewConfiguration configuration = new();

    ILogHighlighter[] highlighters = new ILogHighlighter[] { new UrlLogHighlighter(), new QuoteLogHighlighter() };

    List<LogEntry> entries = new List<LogEntry>()
	{
		new LogEntry{ Timestamp = DateTime.UtcNow, Message = "test", LogLevel = LogLevel.Trace },
		new LogEntry{ Timestamp = DateTime.UtcNow.AddSeconds(3), Message = "test", LogLevel = LogLevel.Debug },
        new LogEntry{ Timestamp = DateTime.UtcNow.AddSeconds(4), Message = "test", LogLevel = LogLevel.Information },
        new LogEntry{ Timestamp = DateTime.UtcNow.AddSeconds(4), Message = "test", LogLevel = LogLevel.Warning },
        new LogEntry{ Timestamp = DateTime.UtcNow.AddSeconds(5), Message = "test", LogLevel = LogLevel.Error },
		new LogEntry{ Timestamp = DateTime.UtcNow.AddSeconds(6), Message = "test", LogLevel = LogLevel.Critical },
		new LogEntry{ Timestamp = DateTime.UtcNow.AddSeconds(10), Message = "test test    test test test\n\ttest test test test test test test", LogLevel = LogLevel.Information },
		new LogEntry{ Timestamp = DateTime.UtcNow.AddSeconds(14), Message = "test data", LogLevel = LogLevel.Information,
			Data = new
			{
				Null = (object)null,
				A = "test",
				B = 10,
				C = new object[] { 1, "test", 'c', new[] { 123 } },
				D = new Dictionary<string, object> { { "Key1", "value1" }, { "Key2", "value2" } },
			}
		},
		new LogEntry{ Timestamp = DateTime.UtcNow, Message = "test http://example.com 'value' \"value\" test", LogLevel = LogLevel.Information },
	};

    protected override void OnInitialized()
    {
        for(var i = 0; i < 100; i++)
        {
            entries.Add(new LogEntry { Timestamp = DateTime.UtcNow.AddMinutes(i + 1), Message = "test", LogLevel = LogLevel.Trace });
        }
        base.OnInitialized();
    }

    class ViewConfiguration
    {
        public TimestampDisplayFormat TimestampFormat { get; set; } = TimestampDisplayFormat.FullDateTime;
        public bool ShowLineNumbers { get; set; } = true;
    }
}