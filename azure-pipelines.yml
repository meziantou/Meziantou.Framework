# https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops&tabs=yaml#use-a-microsoft-hosted-agent
pool:
  vmImage: 'windows-2019'

trigger:
- '*'

variables:
  solution: Meziantou.Framework.sln
  buildConfiguration: Release
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_VERSION: '3.1.x'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: $(DOTNET_VERSION)

- task: DotNetCoreCLI@2
  displayName: dotnet build
  inputs:
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: dotnet test
  inputs:
    command: test
    arguments: '--configuration $(BuildConfiguration) --collect "Code coverage"'
    projects: 'tests/**/*Tests.csproj'
    nobuild: true

- task: DotNetCoreCLI@2
  displayName: dotnet pack
  inputs:
    command: 'pack'
    packagesToPack: 'src/**/*.csproj'
    nobuild: true
    versioningScheme: 'off'

- powershell: |
    Write-Host "Searching nupkg and snupkg in folder: $(Build.ArtifactStagingDirectory)"
    $files = Get-ChildItem $(Build.ArtifactStagingDirectory)\* -Include *.nupkg,*.snupkg
    foreach($file in $files) {
        Write-Host "Pushing NuGet package: $($file.FullName)"
        if ($env:Build_SourceBranch -eq 'refs/heads/master')
        {
          & dotnet nuget push "$($file.FullName)" --api-key "$(NuGetApiKey)" --source https://api.nuget.org/v3/index.json --force-english-output --skip-duplicate
        }
        else
        {
          Write-Host "Not on the default branch => Do not push"
        }
    }
  workingDirectory: '$(Build.ArtifactStagingDirectory)'
  ignoreLASTEXITCODE: true  
  displayName: dotnet push
  continueOnError: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()
