// <auto-generated />
#nullable enable

using System.Collections.Concurrent;
using System.Runtime.InteropServices;

namespace Meziantou.Framework.Http;

partial class HstsDomainPolicyCollection
{
    private void LoadPreloadDomains()
    {
        // HSTS preload data source: https://raw.githubusercontent.com/chromium/chromium/65f8b84fb3050b920095e4d95d97e59ea205b3d3/net/http/transport_security_state_static.json
        // Commit date: 2025-04-25T19:59:10.0000000+00:00
        CollectionsMarshal.SetCount(_policies, 5);

        var dict1 = new ConcurrentDictionary<string, HstsDomainPolicy>(concurrencyLevel: -1, capacity: 61, comparer: StringComparer.OrdinalIgnoreCase);
        _policies[0] = dict1;
        Load(dict1, 51, "preload_1.bin");

        var dict2 = new ConcurrentDictionary<string, HstsDomainPolicy>(concurrencyLevel: -1, capacity: 154398, comparer: StringComparer.OrdinalIgnoreCase);
        _policies[1] = dict2;
        Load(dict2, 154388, "preload_2.bin");

        var dict3 = new ConcurrentDictionary<string, HstsDomainPolicy>(concurrencyLevel: -1, capacity: 12094, comparer: StringComparer.OrdinalIgnoreCase);
        _policies[2] = dict3;
        Load(dict3, 12084, "preload_3.bin");

        var dict4 = new ConcurrentDictionary<string, HstsDomainPolicy>(concurrencyLevel: -1, capacity: 196, comparer: StringComparer.OrdinalIgnoreCase);
        _policies[3] = dict4;
        Load(dict4, 186, "preload_4.bin");

        var dict5 = new ConcurrentDictionary<string, HstsDomainPolicy>(concurrencyLevel: -1, capacity: 11, comparer: StringComparer.OrdinalIgnoreCase);
        _policies[4] = dict5;
        dict5.TryAdd("wnc-frontend-alb-1765173526.ap-northeast-2.elb.amazonaws.com", new HstsDomainPolicy("wnc-frontend-alb-1765173526.ap-northeast-2.elb.amazonaws.com", _expires1year, true));
    }
}